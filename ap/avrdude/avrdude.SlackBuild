#!/bin/sh
cd $(dirname $0) ; CWD=$(pwd)

APP=avrdude
VERSION=$(ls $APP-*.tar.?z* | sed -e 's/\.tar\..z.*//' | rev | cut -d- -f1 | rev | head -1)
BUILD=${BUILD:-1}
TAG=${TAG:-micu}
TMP=${TMP:-/tmp}
OUTDIR=${OUTDIR:-$TMP}
NUMJOBS=${NUMJOBS:-"-j$(expr $(nproc) + 1)"}
BUILDABI=""

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$(uname -m)" in
    i?86) ARCH=i686 ;;
    arm*) readelf /usr/bin/file -A | grep -E -q "Tag_CPU.*[4,5]" && ARCH=arm || ARCH=armv7hl ; BUILDABI="-gnueabi" ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
    *) ARCH=$(uname -m) ;;
  esac
  export ARCH
fi

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=pentium4 -mtune=generic"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -march=x86-64 -mtune=generic -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

# Machine flags override (keep -O and -fPIC):
if [ -n "$MCFLAGS" ]; then
  SLKCFLAGS="$(echo $SLKCFLAGS | xargs -n1 | egrep -w '(-O[0-9a-z]*|-fPIC)' | xargs) $MCFLAGS"
fi

PKG=$TMP/package-$APP
rm -rf $PKG
mkdir -p $PKG
cd $TMP
rm -rf $APP-$VERSION
tar xvf $CWD/$APP-$VERSION.tar.?z* || exit 1
cd $APP-$VERSION || exit 1
chown -R root:root .
find . \
  \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \+ -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \+

CFLAGS="$SLKCFLAGS" \
./configure --prefix=/usr \
	    --sysconfdir=/etc/$APP \
	    --localstatedir=/var \
	    --mandir=/usr/man \
	    --infodir=/usr/info \
	    --docdir=/usr/doc/${APP}-${VERSION} \
	    --libdir=/usr/lib$LIBDIRSUFFIX \
	    --disable-parport \
	    --enable-linuxgpio \
	    --disable-doc \
	    --build=$ARCH-slackware-linux${BUILDABI} || exit 1

make $NUMJOBS || exit 1
make install DESTDIR=$PKG || exit 1

# Don't ship .la files:
rm -f $PKG/{,usr/}lib${LIBDIRSUFFIX}/*.la

chown -R root:bin $PKG/usr/bin

( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
)

# Preserve config file:
mv -v $PKG/etc/$APP/${APP}.conf $PKG/etc/$APP/${APP}.conf.new

# Compress and if needed symlink the man pages:
if [ -d $PKG/usr/info ]; then
  rm -f $PKG/usr/info/dir
  gzip -9 $PKG/usr/info/*
fi
if [ -d $PKG/usr/man ]; then
  ( cd $PKG/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd $manpagedir
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink $eachpage ).gz $eachpage.gz
          rm $eachpage
        done
        gzip -9 *.?
      )
    done
  )
fi

mkdir -p $PKG/usr/doc/$APP-$VERSION
cp -a AUTHORS COPYING ChangeLog \
  ChangeLog-* INSTALL NEWS README \
  $PKG/usr/doc/$APP-$VERSION

if [ -f $CWD/$APP-doc-$VERSION.tar.?z* ]; then
  ( cd $PKG/usr/doc/$APP-$VERSION &&
    tar xvf $CWD/$APP-doc-$VERSION.tar.?z* &&
    mv -v $APP-html html
  )
fi

mkdir -p $PKG/install
[ -f $CWD/doinst.sh ] && cat $CWD/doinst.sh > $PKG/install/doinst.sh
[ -f $CWD/doinst.sh.gz ] && zcat $CWD/doinst.sh.gz > $PKG/install/doinst.sh
cat $CWD/slack-desc > $PKG/install/slack-desc

# Allow to run as non-root until now:
if [ $(id -u) -ne 0 ]; then
  echo "*** Running as non-root, skipping makepkg."
  echo "*** Package contents is in $PKG directory."
  exit 0
fi

cd $PKG
makepkg -l y -c n $OUTDIR/$APP-$VERSION-$ARCH-${BUILD}${TAG}.txz

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  rm -rf $TMP/$APP-$VERSION
  rm -rf $PKG
fi

