#!/bin/sh
cd $(dirname $0) ; CWD=$(pwd)

APP=nmon
SRC=lmon
VERSION=$(ls ${SRC}*.c | sed -e 's/'$SRC'//' -e 's/\.c//')
BUILD=${BUILD:-1}
TAG=${TAG:-micu}
TMP=${TMP:-/tmp}
OUTDIR=${OUTDIR:-$TMP}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$(uname -m)" in
    i?86) ARCH=i686 ;;
    arm*) readelf /usr/bin/file -A | grep -E -q "Tag_CPU.*[4,5]" && ARCH=arm || ARCH=armv7hl ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
    *) ARCH=$(uname -m) ;;
  esac
  export ARCH
fi

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=pentium4 -mtune=generic"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -march=x86-64 -mtune=generic -fPIC"
else
  SLKCFLAGS="-O2"
fi

# Native build override:
if [ -n "$SLKBUILD_NATIVE" ]; then
  SLKCFLAGS="-O2 -march=native $SLKBUILD_CFLAGS"
fi

PKG=$TMP/package-$APP
rm -rf $PKG
mkdir -p $PKG/usr/bin $PKG/usr/man/man1

set -x
CFLAGS="-Wall $SLKCFLAGS -D X86"
LDFLAGS="-lcurses -lm"
gcc -o $PKG/usr/bin/$APP $CFLAGS $LDFLAGS $CWD/${SRC}${VERSION}.c
strip --strip-unneeded $PKG/usr/bin/$APP

gzip -c9 $CWD/${APP}.1 > $PKG/usr/man/man1/${APP}.1.gz
set +x

mkdir -p $PKG/install
[ -f $CWD/doinst.sh ] && cat $CWD/doinst.sh > $PKG/install/doinst.sh
[ -f $CWD/doinst.sh.gz ] && zcat $CWD/doinst.sh.gz > $PKG/install/doinst.sh
cat $CWD/slack-desc > $PKG/install/slack-desc

# Allow to run as non-root until now:
if [ $(id -u) -ne 0 ]; then
  echo "*** Running as non-root, skipping makepkg."
  echo "*** Package contents is in $PKG directory."
  exit 0
fi

cd $PKG
makepkg -l y -c n $OUTDIR/$APP-$VERSION-$ARCH-${BUILD}${TAG}.txz

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  rm -rf $TMP/$APP-$VERSION
  rm -rf $PKG
fi

