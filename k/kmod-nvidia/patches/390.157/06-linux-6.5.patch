diff --git a/kernel/common/inc/nv-mm.h b/kernel/common/inc/nv-mm.h
index aec55b0..bbfa1c0 100644
--- a/kernel/common/inc/nv-mm.h
+++ b/kernel/common/inc/nv-mm.h
@@ -93,7 +93,11 @@ typedef int vm_fault_t;
             if (force)
                 flags |= FOLL_FORCE;
 
+        #if defined(NV_GET_USER_PAGES_HAS_VMAS_ARG)
             return get_user_pages(start, nr_pages, flags, pages, vmas);
+	#else
+            return get_user_pages(start, nr_pages, flags, pages);
+	#endif
         }
     #endif
 #endif
@@ -128,6 +132,8 @@ typedef int vm_fault_t;
  * commit 64019a2e467a ("mm/gup: remove task_struct pointer for
  * all gup code") in v5.9-rc1 (2020-08-11).
  *
+ * get_user_pages_remote() removed 'vmas' parameter by Lorenzo Stoakes
+ * <lstoakes@gmail.com> in v6.5-rc1 (2023-05-17).
  */
 
 #if defined(NV_GET_USER_PAGES_REMOTE_PRESENT)
@@ -155,8 +161,13 @@ typedef int vm_fault_t;
                return get_user_pages_remote(tsk, mm, start, nr_pages, flags,
                                             pages, vmas, NULL);
             #else
-               return get_user_pages_remote(mm, start, nr_pages, flags,
-                                            pages, vmas, NULL);
+	         #if defined(NV_GET_USER_PAGES_REMOTE_HAS_VMAS_ARG)
+                     return get_user_pages_remote(mm, start, nr_pages, flags,
+                                                  pages, vmas, NULL);
+		 #else
+                     return get_user_pages_remote(mm, start, nr_pages, flags,
+                                                  pages, NULL);
+		 #endif
             #endif
 
         #else
diff --git a/kernel/conftest.sh b/kernel/conftest.sh
index 0988bde..d672ebc 100755
--- a/kernel/conftest.sh
+++ b/kernel/conftest.sh
@@ -3024,6 +3024,7 @@ compile_test() {
             if [ -f conftest$$.o ]; then
                 echo "#define NV_GET_USER_PAGES_HAS_WRITE_AND_FORCE_ARGS" | append_conftest "functions"
                 echo "#undef NV_GET_USER_PAGES_HAS_TASK_STRUCT" | append_conftest "functions"
+                echo "#define NV_GET_USER_PAGES_HAS_VMAS_ARG" | append_conftest "functions"
                 rm -f conftest$$.o
                 return
             fi
@@ -3050,11 +3051,39 @@ compile_test() {
             if [ -f conftest$$.o ]; then
                 echo "#undef NV_GET_USER_PAGES_HAS_WRITE_AND_FORCE_ARGS" | append_conftest "functions"
                 echo "#undef NV_GET_USER_PAGES_HAS_TASK_STRUCT" | append_conftest "functions"
+                echo "#define NV_GET_USER_PAGES_HAS_VMAS_ARG" | append_conftest "functions"
                 rm -f conftest$$.o
                 return
             fi
 
             # Conftest #3: Check if get_user_pages has gup_flags instead of
+            # write and force parameters. And that gup doesn't accept a
+            # task_struct and mm_struct as its first arguments. And finally
+	    # there is no vmas parameter.
+            # Return if available.
+            # Fall through to conftest #4 on failure.
+
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/mm.h>
+            long get_user_pages(unsigned long start,
+                                unsigned long nr_pages,
+                                unsigned int gup_flags,
+                                struct page **pages) {
+                return 0;
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                echo "#undef NV_GET_USER_PAGES_HAS_WRITE_AND_FORCE_ARGS" | append_conftest "functions"
+                echo "#undef NV_GET_USER_PAGES_HAS_TASK_STRUCT" | append_conftest "functions"
+                echo "#undef NV_GET_USER_PAGES_HAS_VMAS_ARG" | append_conftest "functions"
+                rm -f conftest$$.o
+                return
+            fi
+
+            # Conftest #4: Check if get_user_pages has gup_flags instead of
             # write and force parameters AND that gup has task_struct and
             # mm_struct as its first arguments.
             # Return if available.
@@ -3078,12 +3107,14 @@ compile_test() {
             if [ -f conftest$$.o ]; then
                 echo "#undef NV_GET_USER_PAGES_HAS_WRITE_AND_FORCE_ARGS" | append_conftest "functions"
                 echo "#define NV_GET_USER_PAGES_HAS_TASK_STRUCT" | append_conftest "functions"
+                echo "#define NV_GET_USER_PAGES_HAS_VMAS_ARG" | append_conftest "functions"
                 rm -f conftest$$.o
                 return
             fi
 
             echo "#define NV_GET_USER_PAGES_HAS_WRITE_AND_FORCE_ARGS" | append_conftest "functions"
             echo "#define NV_GET_USER_PAGES_HAS_TASK_STRUCT" | append_conftest "functions"
+            echo "#define NV_GET_USER_PAGES_HAS_VMAS_ARG" | append_conftest "functions"
 
             return
         ;;
@@ -3091,7 +3122,7 @@ compile_test() {
         get_user_pages_remote)
             #
             # Determine if the function get_user_pages_remote() is
-            # present and has write/force/locked/tsk parameters.
+            # present and has write/force/locked/tsk/vmas parameters.
             #
             # get_user_pages_remote() was added by:
             #   2016 Feb 12: 1e9877902dc7e11d2be038371c6fbf2dfcd469d7
@@ -3108,6 +3139,9 @@ compile_test() {
             # commit 64019a2e467a ("mm/gup: remove task_struct pointer for
             # all gup code") in v5.9-rc1 (2020-08-11).
             #
+            # get_user_pages_remote() removed 'vmas' parameter by
+            # Lorenzo Stoakes <lstoakes@gmail.com> in v6.5-rc1 (2023-05-17).
+            #
             # conftest #1: check if get_user_pages_remote() is available
             # return if not available.
             # Fall through to conftest #2 if it is present
@@ -3210,11 +3244,33 @@ compile_test() {
             if [ -f conftest$$.o ]; then
                 echo "#undef NV_GET_USER_PAGES_REMOTE_HAS_TSK_ARG" | append_conftest "functions"
                 echo "#define NV_GET_USER_PAGES_REMOTE_HAS_LOCKED_ARG" | append_conftest "functions"
+                echo "#define NV_GET_USER_PAGES_REMOTE_HAS_VMAS_ARG" | append_conftest "functions"
                 rm -f conftest$$.o
-            else
+            fi
 
-                echo "#define NV_GET_USER_PAGES_REMOTE_HAS_TSK_ARG" | append_conftest "functions"
-                echo "#undef NV_GET_USER_PAGES_REMOTE_HAS_LOCKED_ARG" | append_conftest "functions"
+            #
+            # conftest #5: check if get_user_pages_remote() does not take
+            # vmas argument.
+            #
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/mm.h>
+            long get_user_pages_remote(struct mm_struct *mm,
+                                       unsigned long start,
+                                       unsigned long nr_pages,
+                                       unsigned int gup_flags,
+                                       struct page **pages,
+                                       int *locked) {
+                return 0;
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                echo "#undef NV_GET_USER_PAGES_REMOTE_HAS_TSK_ARG" | append_conftest "functions"
+                echo "#define NV_GET_USER_PAGES_REMOTE_HAS_LOCKED_ARG" | append_conftest "functions"
+                echo "#undef NV_GET_USER_PAGES_REMOTE_HAS_VMAS_ARG" | append_conftest "functions"
+                rm -f conftest$$.o
             fi
         ;;
 
